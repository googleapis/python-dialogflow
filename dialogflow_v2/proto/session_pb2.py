# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow_v2/proto/session.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from dialogflow_v2.proto import context_pb2 as google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_context__pb2
from dialogflow_v2.proto import intent_pb2 as google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_intent__pb2
from dialogflow_v2.proto import session_entity_type_pb2 as google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_session__entity__type__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.rpc import status_pb2 as google_dot_rpc_dot_status__pb2
from google.type import latlng_pb2 as google_dot_type_dot_latlng__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/cloud/dialogflow_v2/proto/session.proto',
  package='google.cloud.dialogflow.v2',
  syntax='proto3',
  serialized_pb=_b('\n.google/cloud/dialogflow_v2/proto/session.proto\x12\x1agoogle.cloud.dialogflow.v2\x1a\x1cgoogle/api/annotations.proto\x1a.google/cloud/dialogflow_v2/proto/context.proto\x1a-google/cloud/dialogflow_v2/proto/intent.proto\x1a:google/cloud/dialogflow_v2/proto/session_entity_type.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17google/rpc/status.proto\x1a\x18google/type/latlng.proto\"\xbb\x01\n\x13\x44\x65tectIntentRequest\x12\x0f\n\x07session\x18\x01 \x01(\t\x12\x41\n\x0cquery_params\x18\x02 \x01(\x0b\x32+.google.cloud.dialogflow.v2.QueryParameters\x12;\n\x0bquery_input\x18\x03 \x01(\x0b\x32&.google.cloud.dialogflow.v2.QueryInput\x12\x13\n\x0binput_audio\x18\x05 \x01(\x0c\"\x96\x01\n\x14\x44\x65tectIntentResponse\x12\x13\n\x0bresponse_id\x18\x01 \x01(\t\x12=\n\x0cquery_result\x18\x02 \x01(\x0b\x32\'.google.cloud.dialogflow.v2.QueryResult\x12*\n\x0ewebhook_status\x18\x03 \x01(\x0b\x32\x12.google.rpc.Status\"\x95\x02\n\x0fQueryParameters\x12\x11\n\ttime_zone\x18\x01 \x01(\t\x12)\n\x0cgeo_location\x18\x02 \x01(\x0b\x32\x13.google.type.LatLng\x12\x35\n\x08\x63ontexts\x18\x03 \x03(\x0b\x32#.google.cloud.dialogflow.v2.Context\x12\x16\n\x0ereset_contexts\x18\x04 \x01(\x08\x12K\n\x14session_entity_types\x18\x05 \x03(\x0b\x32-.google.cloud.dialogflow.v2.SessionEntityType\x12(\n\x07payload\x18\x06 \x01(\x0b\x32\x17.google.protobuf.Struct\"\xcb\x01\n\nQueryInput\x12\x44\n\x0c\x61udio_config\x18\x01 \x01(\x0b\x32,.google.cloud.dialogflow.v2.InputAudioConfigH\x00\x12\x35\n\x04text\x18\x02 \x01(\x0b\x32%.google.cloud.dialogflow.v2.TextInputH\x00\x12\x37\n\x05\x65vent\x18\x03 \x01(\x0b\x32&.google.cloud.dialogflow.v2.EventInputH\x00\x42\x07\n\x05input\"\xb8\x04\n\x0bQueryResult\x12\x12\n\nquery_text\x18\x01 \x01(\t\x12\x15\n\rlanguage_code\x18\x0f \x01(\t\x12%\n\x1dspeech_recognition_confidence\x18\x02 \x01(\x02\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x12+\n\nparameters\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12#\n\x1b\x61ll_required_params_present\x18\x05 \x01(\x08\x12\x18\n\x10\x66ulfillment_text\x18\x06 \x01(\t\x12H\n\x14\x66ulfillment_messages\x18\x07 \x03(\x0b\x32*.google.cloud.dialogflow.v2.Intent.Message\x12\x16\n\x0ewebhook_source\x18\x08 \x01(\t\x12\x30\n\x0fwebhook_payload\x18\t \x01(\x0b\x32\x17.google.protobuf.Struct\x12<\n\x0foutput_contexts\x18\n \x03(\x0b\x32#.google.cloud.dialogflow.v2.Context\x12\x32\n\x06intent\x18\x0b \x01(\x0b\x32\".google.cloud.dialogflow.v2.Intent\x12#\n\x1bintent_detection_confidence\x18\x0c \x01(\x02\x12\x30\n\x0f\x64iagnostic_info\x18\x0e \x01(\x0b\x32\x17.google.protobuf.Struct\"\xde\x01\n\x1cStreamingDetectIntentRequest\x12\x0f\n\x07session\x18\x01 \x01(\t\x12\x41\n\x0cquery_params\x18\x02 \x01(\x0b\x32+.google.cloud.dialogflow.v2.QueryParameters\x12;\n\x0bquery_input\x18\x03 \x01(\x0b\x32&.google.cloud.dialogflow.v2.QueryInput\x12\x18\n\x10single_utterance\x18\x04 \x01(\x08\x12\x13\n\x0binput_audio\x18\x06 \x01(\x0c\"\xf3\x01\n\x1dStreamingDetectIntentResponse\x12\x13\n\x0bresponse_id\x18\x01 \x01(\t\x12R\n\x12recognition_result\x18\x02 \x01(\x0b\x32\x36.google.cloud.dialogflow.v2.StreamingRecognitionResult\x12=\n\x0cquery_result\x18\x03 \x01(\x0b\x32\'.google.cloud.dialogflow.v2.QueryResult\x12*\n\x0ewebhook_status\x18\x04 \x01(\x0b\x32\x12.google.rpc.Status\"\x8a\x02\n\x1aStreamingRecognitionResult\x12X\n\x0cmessage_type\x18\x01 \x01(\x0e\x32\x42.google.cloud.dialogflow.v2.StreamingRecognitionResult.MessageType\x12\x12\n\ntranscript\x18\x02 \x01(\t\x12\x10\n\x08is_final\x18\x03 \x01(\x08\x12\x12\n\nconfidence\x18\x04 \x01(\x02\"X\n\x0bMessageType\x12\x1c\n\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x0e\n\nTRANSCRIPT\x10\x01\x12\x1b\n\x17\x45ND_OF_SINGLE_UTTERANCE\x10\x02\"\x9d\x01\n\x10InputAudioConfig\x12\x41\n\x0e\x61udio_encoding\x18\x01 \x01(\x0e\x32).google.cloud.dialogflow.v2.AudioEncoding\x12\x19\n\x11sample_rate_hertz\x18\x02 \x01(\x05\x12\x15\n\rlanguage_code\x18\x03 \x01(\t\x12\x14\n\x0cphrase_hints\x18\x04 \x03(\t\"0\n\tTextInput\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x15\n\rlanguage_code\x18\x02 \x01(\t\"^\n\nEventInput\x12\x0c\n\x04name\x18\x01 \x01(\t\x12+\n\nparameters\x18\x02 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x15\n\rlanguage_code\x18\x03 \x01(\t*\xfb\x01\n\rAudioEncoding\x12\x1e\n\x1a\x41UDIO_ENCODING_UNSPECIFIED\x10\x00\x12\x1c\n\x18\x41UDIO_ENCODING_LINEAR_16\x10\x01\x12\x17\n\x13\x41UDIO_ENCODING_FLAC\x10\x02\x12\x18\n\x14\x41UDIO_ENCODING_MULAW\x10\x03\x12\x16\n\x12\x41UDIO_ENCODING_AMR\x10\x04\x12\x19\n\x15\x41UDIO_ENCODING_AMR_WB\x10\x05\x12\x1b\n\x17\x41UDIO_ENCODING_OGG_OPUS\x10\x06\x12)\n%AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE\x10\x07\x32\xd4\x02\n\x08Sessions\x12\xb4\x01\n\x0c\x44\x65tectIntent\x12/.google.cloud.dialogflow.v2.DetectIntentRequest\x1a\x30.google.cloud.dialogflow.v2.DetectIntentResponse\"A\x82\xd3\xe4\x93\x02;\"6/v2/{session=projects/*/agent/sessions/*}:detectIntent:\x01*\x12\x90\x01\n\x15StreamingDetectIntent\x12\x38.google.cloud.dialogflow.v2.StreamingDetectIntentRequest\x1a\x39.google.cloud.dialogflow.v2.StreamingDetectIntentResponse(\x01\x30\x01\x42\x9b\x01\n\x1e\x63om.google.cloud.dialogflow.v2B\x0cSessionProtoP\x01ZDgoogle.golang.org/genproto/googleapis/cloud/dialogflow/v2;dialogflow\xf8\x01\x01\xa2\x02\x02\x44\x46\xaa\x02\x1aGoogle.Cloud.Dialogflow.V2b\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_context__pb2.DESCRIPTOR,google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_intent__pb2.DESCRIPTOR,google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_session__entity__type__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,google_dot_rpc_dot_status__pb2.DESCRIPTOR,google_dot_type_dot_latlng__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_AUDIOENCODING = _descriptor.EnumDescriptor(
  name='AudioEncoding',
  full_name='google.cloud.dialogflow.v2.AudioEncoding',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_LINEAR_16', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_FLAC', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_MULAW', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_AMR', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_AMR_WB', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_OGG_OPUS', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2791,
  serialized_end=3042,
)
_sym_db.RegisterEnumDescriptor(_AUDIOENCODING)

AudioEncoding = enum_type_wrapper.EnumTypeWrapper(_AUDIOENCODING)
AUDIO_ENCODING_UNSPECIFIED = 0
AUDIO_ENCODING_LINEAR_16 = 1
AUDIO_ENCODING_FLAC = 2
AUDIO_ENCODING_MULAW = 3
AUDIO_ENCODING_AMR = 4
AUDIO_ENCODING_AMR_WB = 5
AUDIO_ENCODING_OGG_OPUS = 6
AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE = 7


_STREAMINGRECOGNITIONRESULT_MESSAGETYPE = _descriptor.EnumDescriptor(
  name='MessageType',
  full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult.MessageType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MESSAGE_TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSCRIPT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='END_OF_SINGLE_UTTERANCE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2394,
  serialized_end=2482,
)
_sym_db.RegisterEnumDescriptor(_STREAMINGRECOGNITIONRESULT_MESSAGETYPE)


_DETECTINTENTREQUEST = _descriptor.Descriptor(
  name='DetectIntentRequest',
  full_name='google.cloud.dialogflow.v2.DetectIntentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='google.cloud.dialogflow.v2.DetectIntentRequest.session', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_params', full_name='google.cloud.dialogflow.v2.DetectIntentRequest.query_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_input', full_name='google.cloud.dialogflow.v2.DetectIntentRequest.query_input', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_audio', full_name='google.cloud.dialogflow.v2.DetectIntentRequest.input_audio', index=3,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=345,
  serialized_end=532,
)


_DETECTINTENTRESPONSE = _descriptor.Descriptor(
  name='DetectIntentResponse',
  full_name='google.cloud.dialogflow.v2.DetectIntentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response_id', full_name='google.cloud.dialogflow.v2.DetectIntentResponse.response_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_result', full_name='google.cloud.dialogflow.v2.DetectIntentResponse.query_result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='webhook_status', full_name='google.cloud.dialogflow.v2.DetectIntentResponse.webhook_status', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=685,
)


_QUERYPARAMETERS = _descriptor.Descriptor(
  name='QueryParameters',
  full_name='google.cloud.dialogflow.v2.QueryParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time_zone', full_name='google.cloud.dialogflow.v2.QueryParameters.time_zone', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='geo_location', full_name='google.cloud.dialogflow.v2.QueryParameters.geo_location', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='contexts', full_name='google.cloud.dialogflow.v2.QueryParameters.contexts', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reset_contexts', full_name='google.cloud.dialogflow.v2.QueryParameters.reset_contexts', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='session_entity_types', full_name='google.cloud.dialogflow.v2.QueryParameters.session_entity_types', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload', full_name='google.cloud.dialogflow.v2.QueryParameters.payload', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=688,
  serialized_end=965,
)


_QUERYINPUT = _descriptor.Descriptor(
  name='QueryInput',
  full_name='google.cloud.dialogflow.v2.QueryInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='audio_config', full_name='google.cloud.dialogflow.v2.QueryInput.audio_config', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text', full_name='google.cloud.dialogflow.v2.QueryInput.text', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='event', full_name='google.cloud.dialogflow.v2.QueryInput.event', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='input', full_name='google.cloud.dialogflow.v2.QueryInput.input',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=968,
  serialized_end=1171,
)


_QUERYRESULT = _descriptor.Descriptor(
  name='QueryResult',
  full_name='google.cloud.dialogflow.v2.QueryResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='query_text', full_name='google.cloud.dialogflow.v2.QueryResult.query_text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='language_code', full_name='google.cloud.dialogflow.v2.QueryResult.language_code', index=1,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speech_recognition_confidence', full_name='google.cloud.dialogflow.v2.QueryResult.speech_recognition_confidence', index=2,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action', full_name='google.cloud.dialogflow.v2.QueryResult.action', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='google.cloud.dialogflow.v2.QueryResult.parameters', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='all_required_params_present', full_name='google.cloud.dialogflow.v2.QueryResult.all_required_params_present', index=5,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fulfillment_text', full_name='google.cloud.dialogflow.v2.QueryResult.fulfillment_text', index=6,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fulfillment_messages', full_name='google.cloud.dialogflow.v2.QueryResult.fulfillment_messages', index=7,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='webhook_source', full_name='google.cloud.dialogflow.v2.QueryResult.webhook_source', index=8,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='webhook_payload', full_name='google.cloud.dialogflow.v2.QueryResult.webhook_payload', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_contexts', full_name='google.cloud.dialogflow.v2.QueryResult.output_contexts', index=10,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intent', full_name='google.cloud.dialogflow.v2.QueryResult.intent', index=11,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intent_detection_confidence', full_name='google.cloud.dialogflow.v2.QueryResult.intent_detection_confidence', index=12,
      number=12, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='diagnostic_info', full_name='google.cloud.dialogflow.v2.QueryResult.diagnostic_info', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1174,
  serialized_end=1742,
)


_STREAMINGDETECTINTENTREQUEST = _descriptor.Descriptor(
  name='StreamingDetectIntentRequest',
  full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest.session', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_params', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest.query_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_input', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest.query_input', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='single_utterance', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest.single_utterance', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input_audio', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentRequest.input_audio', index=4,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1745,
  serialized_end=1967,
)


_STREAMINGDETECTINTENTRESPONSE = _descriptor.Descriptor(
  name='StreamingDetectIntentResponse',
  full_name='google.cloud.dialogflow.v2.StreamingDetectIntentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response_id', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentResponse.response_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recognition_result', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentResponse.recognition_result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query_result', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentResponse.query_result', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='webhook_status', full_name='google.cloud.dialogflow.v2.StreamingDetectIntentResponse.webhook_status', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1970,
  serialized_end=2213,
)


_STREAMINGRECOGNITIONRESULT = _descriptor.Descriptor(
  name='StreamingRecognitionResult',
  full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_type', full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult.message_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transcript', full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult.transcript', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_final', full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult.is_final', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='google.cloud.dialogflow.v2.StreamingRecognitionResult.confidence', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STREAMINGRECOGNITIONRESULT_MESSAGETYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2216,
  serialized_end=2482,
)


_INPUTAUDIOCONFIG = _descriptor.Descriptor(
  name='InputAudioConfig',
  full_name='google.cloud.dialogflow.v2.InputAudioConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='audio_encoding', full_name='google.cloud.dialogflow.v2.InputAudioConfig.audio_encoding', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sample_rate_hertz', full_name='google.cloud.dialogflow.v2.InputAudioConfig.sample_rate_hertz', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='language_code', full_name='google.cloud.dialogflow.v2.InputAudioConfig.language_code', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='phrase_hints', full_name='google.cloud.dialogflow.v2.InputAudioConfig.phrase_hints', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2485,
  serialized_end=2642,
)


_TEXTINPUT = _descriptor.Descriptor(
  name='TextInput',
  full_name='google.cloud.dialogflow.v2.TextInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='google.cloud.dialogflow.v2.TextInput.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='language_code', full_name='google.cloud.dialogflow.v2.TextInput.language_code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2644,
  serialized_end=2692,
)


_EVENTINPUT = _descriptor.Descriptor(
  name='EventInput',
  full_name='google.cloud.dialogflow.v2.EventInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.cloud.dialogflow.v2.EventInput.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='google.cloud.dialogflow.v2.EventInput.parameters', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='language_code', full_name='google.cloud.dialogflow.v2.EventInput.language_code', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2694,
  serialized_end=2788,
)

_DETECTINTENTREQUEST.fields_by_name['query_params'].message_type = _QUERYPARAMETERS
_DETECTINTENTREQUEST.fields_by_name['query_input'].message_type = _QUERYINPUT
_DETECTINTENTRESPONSE.fields_by_name['query_result'].message_type = _QUERYRESULT
_DETECTINTENTRESPONSE.fields_by_name['webhook_status'].message_type = google_dot_rpc_dot_status__pb2._STATUS
_QUERYPARAMETERS.fields_by_name['geo_location'].message_type = google_dot_type_dot_latlng__pb2._LATLNG
_QUERYPARAMETERS.fields_by_name['contexts'].message_type = google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_context__pb2._CONTEXT
_QUERYPARAMETERS.fields_by_name['session_entity_types'].message_type = google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_session__entity__type__pb2._SESSIONENTITYTYPE
_QUERYPARAMETERS.fields_by_name['payload'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_QUERYINPUT.fields_by_name['audio_config'].message_type = _INPUTAUDIOCONFIG
_QUERYINPUT.fields_by_name['text'].message_type = _TEXTINPUT
_QUERYINPUT.fields_by_name['event'].message_type = _EVENTINPUT
_QUERYINPUT.oneofs_by_name['input'].fields.append(
  _QUERYINPUT.fields_by_name['audio_config'])
_QUERYINPUT.fields_by_name['audio_config'].containing_oneof = _QUERYINPUT.oneofs_by_name['input']
_QUERYINPUT.oneofs_by_name['input'].fields.append(
  _QUERYINPUT.fields_by_name['text'])
_QUERYINPUT.fields_by_name['text'].containing_oneof = _QUERYINPUT.oneofs_by_name['input']
_QUERYINPUT.oneofs_by_name['input'].fields.append(
  _QUERYINPUT.fields_by_name['event'])
_QUERYINPUT.fields_by_name['event'].containing_oneof = _QUERYINPUT.oneofs_by_name['input']
_QUERYRESULT.fields_by_name['parameters'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_QUERYRESULT.fields_by_name['fulfillment_messages'].message_type = google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_intent__pb2._INTENT_MESSAGE
_QUERYRESULT.fields_by_name['webhook_payload'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_QUERYRESULT.fields_by_name['output_contexts'].message_type = google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_context__pb2._CONTEXT
_QUERYRESULT.fields_by_name['intent'].message_type = google_dot_cloud_dot_dialogflow__v2_dot_proto_dot_intent__pb2._INTENT
_QUERYRESULT.fields_by_name['diagnostic_info'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_STREAMINGDETECTINTENTREQUEST.fields_by_name['query_params'].message_type = _QUERYPARAMETERS
_STREAMINGDETECTINTENTREQUEST.fields_by_name['query_input'].message_type = _QUERYINPUT
_STREAMINGDETECTINTENTRESPONSE.fields_by_name['recognition_result'].message_type = _STREAMINGRECOGNITIONRESULT
_STREAMINGDETECTINTENTRESPONSE.fields_by_name['query_result'].message_type = _QUERYRESULT
_STREAMINGDETECTINTENTRESPONSE.fields_by_name['webhook_status'].message_type = google_dot_rpc_dot_status__pb2._STATUS
_STREAMINGRECOGNITIONRESULT.fields_by_name['message_type'].enum_type = _STREAMINGRECOGNITIONRESULT_MESSAGETYPE
_STREAMINGRECOGNITIONRESULT_MESSAGETYPE.containing_type = _STREAMINGRECOGNITIONRESULT
_INPUTAUDIOCONFIG.fields_by_name['audio_encoding'].enum_type = _AUDIOENCODING
_EVENTINPUT.fields_by_name['parameters'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
DESCRIPTOR.message_types_by_name['DetectIntentRequest'] = _DETECTINTENTREQUEST
DESCRIPTOR.message_types_by_name['DetectIntentResponse'] = _DETECTINTENTRESPONSE
DESCRIPTOR.message_types_by_name['QueryParameters'] = _QUERYPARAMETERS
DESCRIPTOR.message_types_by_name['QueryInput'] = _QUERYINPUT
DESCRIPTOR.message_types_by_name['QueryResult'] = _QUERYRESULT
DESCRIPTOR.message_types_by_name['StreamingDetectIntentRequest'] = _STREAMINGDETECTINTENTREQUEST
DESCRIPTOR.message_types_by_name['StreamingDetectIntentResponse'] = _STREAMINGDETECTINTENTRESPONSE
DESCRIPTOR.message_types_by_name['StreamingRecognitionResult'] = _STREAMINGRECOGNITIONRESULT
DESCRIPTOR.message_types_by_name['InputAudioConfig'] = _INPUTAUDIOCONFIG
DESCRIPTOR.message_types_by_name['TextInput'] = _TEXTINPUT
DESCRIPTOR.message_types_by_name['EventInput'] = _EVENTINPUT
DESCRIPTOR.enum_types_by_name['AudioEncoding'] = _AUDIOENCODING

DetectIntentRequest = _reflection.GeneratedProtocolMessageType('DetectIntentRequest', (_message.Message,), dict(
  DESCRIPTOR = _DETECTINTENTREQUEST,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """The request to detect user's intent.


  Attributes:
      session:
          Required. The name of the session this query is sent to.
          Format: ``projects/<Project ID>/agent/sessions/<Session ID>``.
          It's up to the API caller to choose an appropriate session ID.
          It can be a random number or some type of user identifier
          (preferably hashed). The length of the session ID must not
          exceed 36 bytes.
      query_params:
          Optional. The parameters of this query.
      query_input:
          Required. The input specification. It can be set to:  1. an
          audio config which instructs the speech recognizer how to
          process    the speech audio,  2. a conversational query in the
          form of text, or  3. an event that specifies which intent to
          trigger.
      input_audio:
          Optional. The natural language speech audio to be processed.
          This field should be populated iff ``query_input`` is set to
          an input audio config. A single request can contain up to 1
          minute of speech audio data.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DetectIntentRequest)
  ))
_sym_db.RegisterMessage(DetectIntentRequest)

DetectIntentResponse = _reflection.GeneratedProtocolMessageType('DetectIntentResponse', (_message.Message,), dict(
  DESCRIPTOR = _DETECTINTENTRESPONSE,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """The message returned from the DetectIntent method.


  Attributes:
      response_id:
          The unique identifier of the response. It can be used to
          locate a response in the training example set or for reporting
          issues.
      query_result:
          The results of the conversational query or event processing.
      webhook_status:
          Specifies the status of the webhook request.
          ``webhook_status`` is never populated in webhook requests.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.DetectIntentResponse)
  ))
_sym_db.RegisterMessage(DetectIntentResponse)

QueryParameters = _reflection.GeneratedProtocolMessageType('QueryParameters', (_message.Message,), dict(
  DESCRIPTOR = _QUERYPARAMETERS,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Represents the parameters of the conversational query.


  Attributes:
      time_zone:
          Optional. The time zone of this conversational query from the
          `time zone database <https://www.iana.org/time-zones>`__,
          e.g., America/New\_York, Europe/Paris. If not provided, the
          time zone specified in agent settings is used.
      geo_location:
          Optional. The geo location of this conversational query.
      contexts:
          Optional. The collection of contexts to be activated before
          this query is executed.
      reset_contexts:
          Optional. Specifies whether to delete all contexts in the
          current session before the new ones are activated.
      session_entity_types:
          Optional. The collection of session entity types to replace or
          extend developer entities with for this query only. The entity
          synonyms apply to all languages.
      payload:
          Optional. This field can be used to pass custom data into the
          webhook associated with the agent. Arbitrary JSON objects are
          supported.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.QueryParameters)
  ))
_sym_db.RegisterMessage(QueryParameters)

QueryInput = _reflection.GeneratedProtocolMessageType('QueryInput', (_message.Message,), dict(
  DESCRIPTOR = _QUERYINPUT,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Represents the query input. It can contain either:

  1. An audio config which instructs the speech recognizer how to process
     the speech audio.

  2. A conversational query in the form of text,.

  3. An event that specifies which intent to trigger.


  Attributes:
      input:
          Required. The input specification.
      audio_config:
          Instructs the speech recognizer how to process the speech
          audio.
      text:
          The natural language text to be processed.
      event:
          The event to be processed.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.QueryInput)
  ))
_sym_db.RegisterMessage(QueryInput)

QueryResult = _reflection.GeneratedProtocolMessageType('QueryResult', (_message.Message,), dict(
  DESCRIPTOR = _QUERYRESULT,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Represents the result of conversational query or event processing.


  Attributes:
      query_text:
          The original conversational query text: - If natural language
          text was provided as input, ``query_text`` contains a copy of
          the input. - If natural language speech audio was provided as
          input, ``query_text`` contains the speech recognition result.
          If speech recognizer produced multiple alternatives, a
          particular one is picked. - If an event was provided as input,
          ``query_text`` is not set.
      language_code:
          The language that was triggered during intent detection. See
          `Language Support
          <https://dialogflow.com/docs/reference/language>`__ for a list
          of the currently supported language codes.
      speech_recognition_confidence:
          The Speech recognition confidence between 0.0 and 1.0. A
          higher number indicates an estimated greater likelihood that
          the recognized words are correct. The default of 0.0 is a
          sentinel value indicating that confidence was not set.  You
          should not rely on this field as it isn't guaranteed to be
          accurate, or even set. In particular this field isn't set in
          Webhook calls and for StreamingDetectIntent since the
          streaming endpoint has separate confidence estimates per
          portion of the audio in StreamingRecognitionResult.
      action:
          The action name from the matched intent.
      parameters:
          The collection of extracted parameters.
      all_required_params_present:
          This field is set to: - ``false`` if the matched intent has
          required parameters and not all of the required parameter
          values have been collected. - ``true`` if all required
          parameter values have been collected, or if the matched intent
          doesn't contain any required parameters.
      fulfillment_text:
          The text to be pronounced to the user or shown on the screen.
      fulfillment_messages:
          The collection of rich messages to present to the user.
      webhook_source:
          If the query was fulfilled by a webhook call, this field is
          set to the value of the ``source`` field returned in the
          webhook response.
      webhook_payload:
          If the query was fulfilled by a webhook call, this field is
          set to the value of the ``payload`` field returned in the
          webhook response.
      output_contexts:
          The collection of output contexts. If applicable,
          ``output_contexts.parameters`` contains entries with name
          ``<parameter name>.original`` containing the original
          parameter values before the query.
      intent:
          The intent that matched the conversational query. Some, not
          all fields are filled in this message, including but not
          limited to: ``name``, ``display_name`` and ``webhook_state``.
      intent_detection_confidence:
          The intent detection confidence. Values range from 0.0
          (completely uncertain) to 1.0 (completely certain).
      diagnostic_info:
          The free-form diagnostic info. For example, this field could
          contain webhook call latency.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.QueryResult)
  ))
_sym_db.RegisterMessage(QueryResult)

StreamingDetectIntentRequest = _reflection.GeneratedProtocolMessageType('StreamingDetectIntentRequest', (_message.Message,), dict(
  DESCRIPTOR = _STREAMINGDETECTINTENTREQUEST,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """The top-level message sent by the client to the
  ``StreamingDetectIntent`` method.

  Multiple request messages should be sent in order:

  1. The first message must contain ``session``, ``query_input`` plus
     optionally ``query_params`` and/or ``single_utterance``. The message
     must not contain ``input_audio``.

  2. If ``query_input`` was set to a streaming input audio config, all
     subsequent messages must contain only ``input_audio``. Otherwise,
     finish the request stream.


  Attributes:
      session:
          Required. The name of the session the query is sent to. Format
          of the session name: ``projects/<Project
          ID>/agent/sessions/<Session ID>``. It’s up to the API caller
          to choose an appropriate. It can be a random number or some
          type of user identifier (preferably hashed). The length of the
          session ID must not exceed 36 characters.
      query_params:
          Optional. The parameters of this query.
      query_input:
          Required. The input specification. It can be set to:  1. an
          audio config which instructs the speech recognizer how to
          process    the speech audio,  2. a conversational query in the
          form of text, or  3. an event that specifies which intent to
          trigger.
      single_utterance:
          Optional. If ``true``, the recognizer will detect a single
          spoken utterance in input audio. When it detects that the user
          has paused or stopped speaking, it will cease recognition.
          This setting is ignored when ``query_input`` is a piece of
          text or an event.
      input_audio:
          Optional. The input audio content to be recognized. Must be
          sent if ``query_input`` was set to a streaming input audio
          config. The complete audio over all streaming messages must
          not exceed 1 minute.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.StreamingDetectIntentRequest)
  ))
_sym_db.RegisterMessage(StreamingDetectIntentRequest)

StreamingDetectIntentResponse = _reflection.GeneratedProtocolMessageType('StreamingDetectIntentResponse', (_message.Message,), dict(
  DESCRIPTOR = _STREAMINGDETECTINTENTRESPONSE,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """The top-level message returned from the ``StreamingDetectIntent``
  method.

  Multiple response messages can be returned in order:

  1. If the input was set to streaming audio, the first one or more
     messages contain ``recognition_result``. Each ``recognition_result``
     represents a more complete transcript of what the user said. The last
     ``recognition_result`` has ``is_final`` set to ``true``.

  2. The next message contains ``response_id``, ``query_result`` and
     optionally ``webhook_status`` if a WebHook was called.


  Attributes:
      response_id:
          The unique identifier of the response. It can be used to
          locate a response in the training example set or for reporting
          issues.
      recognition_result:
          The result of speech recognition.
      query_result:
          The result of the conversational query or event processing.
      webhook_status:
          Specifies the status of the webhook request.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.StreamingDetectIntentResponse)
  ))
_sym_db.RegisterMessage(StreamingDetectIntentResponse)

StreamingRecognitionResult = _reflection.GeneratedProtocolMessageType('StreamingRecognitionResult', (_message.Message,), dict(
  DESCRIPTOR = _STREAMINGRECOGNITIONRESULT,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Contains a speech recognition result corresponding to a portion of the
  audio that is currently being processed or an indication that this is
  the end of the single requested utterance.

  Example:

  1. transcript: "tube"

  2. transcript: "to be a"

  3. transcript: "to be"

  4. transcript: "to be or not to be" is\_final: true

  5. transcript: " that's"

  6. transcript: " that is"

  7. recognition\_event\_type:
     ``RECOGNITION_EVENT_END_OF_SINGLE_UTTERANCE``

  8. transcript: " that is the question" is\_final: true

  Only two of the responses contain final results (#4 and #8 indicated by
  ``is_final: true``). Concatenating these generates the full transcript:
  "to be or not to be that is the question".

  In each response we populate:

  -  for ``MESSAGE_TYPE_TRANSCRIPT``: ``transcript`` and possibly
     ``is_final``.

  -  for ``MESSAGE_TYPE_END_OF_SINGLE_UTTERANCE``: only ``event_type``.


  Attributes:
      message_type:
          Type of the result message.
      transcript:
          Transcript text representing the words that the user spoke.
          Populated if and only if ``event_type`` =
          ``RECOGNITION_EVENT_TRANSCRIPT``.
      is_final:
          The default of 0.0 is a sentinel value indicating
          ``confidence`` was not set. If ``false``, the
          ``StreamingRecognitionResult`` represents an interim result
          that may change. If ``true``, the recognizer will not return
          any further hypotheses about this piece of the audio. May only
          be populated for ``event_type`` =
          ``RECOGNITION_EVENT_TRANSCRIPT``.
      confidence:
          The Speech confidence between 0.0 and 1.0 for the current
          portion of audio. A higher number indicates an estimated
          greater likelihood that the recognized words are correct. The
          default of 0.0 is a sentinel value indicating that confidence
          was not set.  This field is typically only provided if
          ``is_final`` is true and you should not rely on it being
          accurate or even set.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.StreamingRecognitionResult)
  ))
_sym_db.RegisterMessage(StreamingRecognitionResult)

InputAudioConfig = _reflection.GeneratedProtocolMessageType('InputAudioConfig', (_message.Message,), dict(
  DESCRIPTOR = _INPUTAUDIOCONFIG,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Instructs the speech recognizer how to process the audio content.


  Attributes:
      audio_encoding:
          Required. Audio encoding of the audio content to process.
      sample_rate_hertz:
          Required. Sample rate (in Hertz) of the audio content sent in
          the query. Refer to `Cloud Speech API documentation
          </speech/docs/basics>`__ for more details.
      language_code:
          Required. The language of the supplied audio. Dialogflow does
          not do translations. See `Language Support
          <https://dialogflow.com/docs/languages>`__ for a list of the
          currently supported language codes. Note that queries in the
          same session do not necessarily need to specify the same
          language.
      phrase_hints:
          Optional. The collection of phrase hints which are used to
          boost accuracy of speech recognition. Refer to `Cloud Speech
          API documentation </speech/docs/basics#phrase-hints>`__ for
          more details.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.InputAudioConfig)
  ))
_sym_db.RegisterMessage(InputAudioConfig)

TextInput = _reflection.GeneratedProtocolMessageType('TextInput', (_message.Message,), dict(
  DESCRIPTOR = _TEXTINPUT,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Represents the natural language text to be processed.


  Attributes:
      text:
          Required. The UTF-8 encoded natural language text to be
          processed. Text length must not exceed 256 bytes.
      language_code:
          Required. The language of this conversational query. See
          `Language Support <https://dialogflow.com/docs/languages>`__
          for a list of the currently supported language codes. Note
          that queries in the same session do not necessarily need to
          specify the same language.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.TextInput)
  ))
_sym_db.RegisterMessage(TextInput)

EventInput = _reflection.GeneratedProtocolMessageType('EventInput', (_message.Message,), dict(
  DESCRIPTOR = _EVENTINPUT,
  __module__ = 'google.cloud.dialogflow_v2.proto.session_pb2'
  ,
  __doc__ = """Events allow for matching intents by event name instead of the natural
  language input. For instance, input
  ``<event: { name: “welcome_event”, parameters: { name: “Sam” } }>`` can
  trigger a personalized welcome response. The parameter ``name`` may be
  used by the agent in the response:
  ``“Hello #welcome_event.name! What can I do for you today?”``.


  Attributes:
      name:
          Required. The unique identifier of the event.
      parameters:
          Optional. The collection of parameters associated with the
          event.
      language_code:
          Required. The language of this query. See `Language Support
          <https://dialogflow.com/docs/languages>`__ for a list of the
          currently supported language codes. Note that queries in the
          same session do not necessarily need to specify the same
          language.
  """,
  # @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.EventInput)
  ))
_sym_db.RegisterMessage(EventInput)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\036com.google.cloud.dialogflow.v2B\014SessionProtoP\001ZDgoogle.golang.org/genproto/googleapis/cloud/dialogflow/v2;dialogflow\370\001\001\242\002\002DF\252\002\032Google.Cloud.Dialogflow.V2'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SessionsStub(object):
    """Manages user sessions.

    #
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.DetectIntent = channel.unary_unary(
          '/google.cloud.dialogflow.v2.Sessions/DetectIntent',
          request_serializer=DetectIntentRequest.SerializeToString,
          response_deserializer=DetectIntentResponse.FromString,
          )
      self.StreamingDetectIntent = channel.stream_stream(
          '/google.cloud.dialogflow.v2.Sessions/StreamingDetectIntent',
          request_serializer=StreamingDetectIntentRequest.SerializeToString,
          response_deserializer=StreamingDetectIntentResponse.FromString,
          )


  class SessionsServicer(object):
    """Manages user sessions.

    #
    """

    def DetectIntent(self, request, context):
      """Processes a natural language query and returns structured, actionable data
      as a result. This method is not idempotent, because it may cause contexts
      and session entity types to be updated, which in turn might affect
      results of future queries.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StreamingDetectIntent(self, request_iterator, context):
      """Processes a natural language query in audio format in a streaming fashion
      and returns structured, actionable data as a result. This method is only
      available via the gRPC API (not REST).
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SessionsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'DetectIntent': grpc.unary_unary_rpc_method_handler(
            servicer.DetectIntent,
            request_deserializer=DetectIntentRequest.FromString,
            response_serializer=DetectIntentResponse.SerializeToString,
        ),
        'StreamingDetectIntent': grpc.stream_stream_rpc_method_handler(
            servicer.StreamingDetectIntent,
            request_deserializer=StreamingDetectIntentRequest.FromString,
            response_serializer=StreamingDetectIntentResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'google.cloud.dialogflow.v2.Sessions', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSessionsServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Manages user sessions.

    #
    """
    def DetectIntent(self, request, context):
      """Processes a natural language query and returns structured, actionable data
      as a result. This method is not idempotent, because it may cause contexts
      and session entity types to be updated, which in turn might affect
      results of future queries.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StreamingDetectIntent(self, request_iterator, context):
      """Processes a natural language query in audio format in a streaming fashion
      and returns structured, actionable data as a result. This method is only
      available via the gRPC API (not REST).
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSessionsStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Manages user sessions.

    #
    """
    def DetectIntent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Processes a natural language query and returns structured, actionable data
      as a result. This method is not idempotent, because it may cause contexts
      and session entity types to be updated, which in turn might affect
      results of future queries.
      """
      raise NotImplementedError()
    DetectIntent.future = None
    def StreamingDetectIntent(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """Processes a natural language query in audio format in a streaming fashion
      and returns structured, actionable data as a result. This method is only
      available via the gRPC API (not REST).
      """
      raise NotImplementedError()


  def beta_create_Sessions_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('google.cloud.dialogflow.v2.Sessions', 'DetectIntent'): DetectIntentRequest.FromString,
      ('google.cloud.dialogflow.v2.Sessions', 'StreamingDetectIntent'): StreamingDetectIntentRequest.FromString,
    }
    response_serializers = {
      ('google.cloud.dialogflow.v2.Sessions', 'DetectIntent'): DetectIntentResponse.SerializeToString,
      ('google.cloud.dialogflow.v2.Sessions', 'StreamingDetectIntent'): StreamingDetectIntentResponse.SerializeToString,
    }
    method_implementations = {
      ('google.cloud.dialogflow.v2.Sessions', 'DetectIntent'): face_utilities.unary_unary_inline(servicer.DetectIntent),
      ('google.cloud.dialogflow.v2.Sessions', 'StreamingDetectIntent'): face_utilities.stream_stream_inline(servicer.StreamingDetectIntent),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Sessions_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('google.cloud.dialogflow.v2.Sessions', 'DetectIntent'): DetectIntentRequest.SerializeToString,
      ('google.cloud.dialogflow.v2.Sessions', 'StreamingDetectIntent'): StreamingDetectIntentRequest.SerializeToString,
    }
    response_deserializers = {
      ('google.cloud.dialogflow.v2.Sessions', 'DetectIntent'): DetectIntentResponse.FromString,
      ('google.cloud.dialogflow.v2.Sessions', 'StreamingDetectIntent'): StreamingDetectIntentResponse.FromString,
    }
    cardinalities = {
      'DetectIntent': cardinality.Cardinality.UNARY_UNARY,
      'StreamingDetectIntent': cardinality.Cardinality.STREAM_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'google.cloud.dialogflow.v2.Sessions', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
